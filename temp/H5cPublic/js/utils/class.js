define(['base'], function (base){	var $Class = function ( parent ){		var _class = function (){			this.init.apply( this, arguments );		};		if( parent ){			var subClass = function (){};			subClass.prototype = parent.prototype;			_class.prototype = new subClass;		}		//_class.prototype.constructor = _class;		_class.prototype.init = function (){};		_class.fn = _class.prototype;		_class.fn.parent = _class;		_class._super = _class.__proto__;		_class.extend = function ( obj ){			var extended = obj['extended'];			for( var i in obj ){				_class[ i ] = obj[ i ];			}			if( extended ) extended( _class );		};		_class.include = function ( obj ){			var included = obj['included'];			for( var i in obj ){				_class.fn[ i ] = obj[ i ];			}			if( included ) included( _class );		};		return _class;	};	return $Class;});